@page "/persons"
@rendermode InteractiveServer
@using TeacherDiary.Web.Components.BaseClasses
@inherits PersonsBase
@inject NavigationManager NavigationManager

<h3>Osoby</h3>

<div class="card">
    <div class="card-body">
        Lorem Ipsum jest tekstem stosowanym jako przykładowy wypełniacz w przemyśle poligraficznym. Został po raz pierwszy użyty w XV w. przez nieznanego drukarza do wypełnienia tekstem próbnej książki. Pięć wieków później zaczął być używany przemyśle elektronicznym, pozostając praktycznie niezmienionym. Spopularyzował się w latach 60. XX w. wraz z publikacją arkuszy Letrasetu, zawierających fragmenty Lorem Ipsum, a ostatnio z zawierającym różne wersje Lorem Ipsum oprogramowaniem przeznaczonym do realizacji druków na komputerach osobistych, jak Aldus PageMaker
    </div>
</div>

<br>

@if (Persons == null)
{
    <h3>Lista jest pusta.</h3>
}
else
{
    <div class="card">
        <div class="card-body">

            <div class="d-flex justify-content-between">
                <div>
                    <h3>Lista Osób</h3>
                </div>
                <div>
                    <button class="btn btn-success btn" @onclick="()=>SwitchAddedMode()">Dodaj osobe</button>
                </div>
            </div>

            <table class="table table-hover">
                 <thead>
                    <tr>
                        <th>Imie</th>
                        <th>Nazwisko</th>
                        <th>Mail</th>
                        <th>Phone</th>
                        <th>Agreement</th>
                        <th>Comments</th>
                        <th>Usługa</th>
                        <th>Opcje</th>
                    </tr>
                </thead>
            @foreach (var person in Persons)
            {
                <tbody>
                    <tr>
                        <th>@person.Name</th>
                        <th>@person.Surname</th>
                        <th>@person.Email</th>
                        <th>@person.Phone</th>
                        <th>@person.Agreement</th>
                        <th>@person.Comments</th>
                        <th>@person.TicketForUse.Name</th>
                        <th>
                            <a class="btn btn-primary btn-sm" href="persons/@person.Email">Podgląd</a>
                            <button class="btn btn-success btn-sm" @onclick="()=> TicketForPerson(person.Email)">Dodaj usługę</button>
                            <button class="btn btn-warning btn-sm" @onclick="()=> SwitchEditMode(person)">Edit</button>
                            <button class="btn btn-danger btn-sm" @onclick="()=> RemovePerson(person.Name)">Usuń</button>
                        </th>
                    </tr>
                </tbody>
            }
            </table>

        </div>
    </div>
}

<br />

@if(IsEditMode)
{
    <div class="card mt-3">
        <div class="card-body">
            <h3>Edit: @PersonDto.Email</h3>

            <EditForm Model="@PersonUpdateDto" OnValidSubmit="HandleValidEditPersonSubmit">

                <div class="mb-3">
                    <InputText id="Email" class="form-control" placeholder="@PersonDto.Email" @bind-Value="PersonUpdateDto.Email" readonly />
                    <ValidationMessage For="@(() => PersonUpdateDto.Email)" />
                </div>

                <div class="mb-3">
                    <InputText id="Name" class="form-control" placeholder="@PersonDto.Name" @bind-Value="PersonUpdateDto.Name" />
                    <ValidationMessage For="@(() => PersonUpdateDto.Name)" />
                </div>

                <div class="mb-3">
                    <InputText id="Surname" class="form-control" placeholder="@PersonDto.Surname" @bind-Value="PersonUpdateDto.Surname" />
                    <ValidationMessage For="@(() => PersonUpdateDto.Surname)" />
                </div>

                <div class="mb-3">
                    <InputText id="Phone" class="form-control" placeholder="@PersonDto.Phone" @bind-Value="PersonUpdateDto.Phone" />
                    <ValidationMessage For="@(() => PersonUpdateDto.Phone)" />
                </div>


                <div class="mb-3">
                    <InputText id="Comments" class="form-control" placeholder="@PersonDto.Comments" @bind-Value="PersonUpdateDto.Comments" />
                    <ValidationMessage For="@(() => PersonUpdateDto.Comments)" />
                </div>

                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="Agreement" @bind="@PersonUpdateDto.Agreement" />
                    <label class="form-check-label" for="Agreement">Agreement</label>
                    <ValidationMessage For="@(() => PersonUpdateDto.Agreement)" />
                </div>

                <button class="btn btn-success btn-sm" type="submit">Akceptuj</button>
            </EditForm>

        </div>
    </div>
}

@if(IsAddedMode)
{
    <div class="card mt-3">
        <div class="card-body">
            <h3>Dodawanie nowej osoby</h3>

            <EditForm Model="@PersonCreateDto" OnValidSubmit="HandleValidAddPersonSubmit">

                <div class="mb-3">
                    <InputText id="Name" class="form-control" placeholder="Jan@gmail.com" @bind-Value="PersonCreateDto.Email" />
                    <ValidationMessage For="@(() => PersonCreateDto.Email)" />
                </div>

                <div class="mb-3">
                    <InputText id="Name" class="form-control" placeholder="Jan" @bind-Value="PersonCreateDto.Name" />
                    <ValidationMessage For="@(() => PersonCreateDto.Name)" />
                </div>

                <div class="mb-3">
                    <InputText id="Surname" class="form-control" placeholder="Kowalski" @bind-Value="PersonCreateDto.Surname" />
                    <ValidationMessage For="@(() => PersonCreateDto.Surname)" />
                </div>

                <div class="mb-3">
                    <InputText id="Phone" class="form-control" placeholder="111555111" @bind-Value="PersonCreateDto.Phone" />
                    <ValidationMessage For="@(() => PersonCreateDto.Phone)" />
                </div>


                <div class="mb-3">
                    <InputText id="Comments" class="form-control" placeholder="Comments..." @bind-Value="PersonCreateDto.Comments" />
                    <ValidationMessage For="@(() => PersonCreateDto.Comments)" />
                </div>

                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="Agreement" @bind="@PersonCreateDto.Agreement" />
                    <label class="form-check-label" for="Agreement">Agreement</label>
                    <ValidationMessage For="@(() => PersonCreateDto.Agreement)" />
                </div>

                <button class="btn btn-success btn-sm" type="submit">Akceptuj</button>
            </EditForm>

        </div>
    </div>
}

@if(IsTicketForPerson)
{
    <div class="card mt-3">
        <div class="card-body">
        <h3>Edit: @AssigmentModel.PersonMail</h3>

            <EditForm Model="@AssigmentModel" OnValidSubmit="HandleValidAssigneTicketToPersonSubmit">

            <div class="mb-3">
                <InputText id="PersonMail" class="form-control" placeholder="@AssigmentModel.PersonMail" @bind-Value="AssigmentModel.PersonMail" readonly />
                <ValidationMessage For="@(() => AssigmentModel.PersonMail)" />
            </div>

            <div class="mb-3">
                <InputText id="TicketName" class="form-control" placeholder="@AssigmentModel.TicketName" @bind-Value="AssigmentModel.TicketName" />
                <ValidationMessage For="@(() => @AssigmentModel.TicketName)" />
            </div>

                <button class="btn btn-success btn-sm" type="submit">Akceptuj</button>
            </EditForm>

        </div>
    </div>
}